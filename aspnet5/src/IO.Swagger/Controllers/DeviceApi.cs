/*
 * TestAPI
 *
 *  # Introduction   Welcome to the reference for my API!   <a href=\"http://en.wikipedia.org/wiki/REST_API\" target=\"_blank\">REST</a> is a web-service protocol that lends itself to rapid development by using everyday HTTP and JSON technology.   My REST API provides a broad set of operations and resources that:  * Enable x.  * Support y.  * Process z.   ## Endpoints   My API is provided via the following endpoints.   | Tenant                 | Base URL for REST Endpoints    |  |- -- -- -- -- -- -- -- -- -- -- -- -|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|  | Production             | https://api.mydomain.com/v1    |  | API Sandbox            | https://sandbox.mydomain.com/v1|     The production endpoint provides access to your live user data. The API Sandbox tenant is a good place to test your code without affecting real-world data. To use it, you must be provisioned with an API Sandbox tenant.   ## Access to the API   If you have a tenant, you already have access to the API.   If you don't have a tenant, go to <a href=\"https://www.mydomain.com/resource/sandbox\" target=\"_blank\">https://www.mydomain.com/resource/sandbox</a> and sign up for a one. # Operations:  ## Basic Info  These are the basic operations for my API...   etc 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@swaggerhub.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DeviceApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Returns all registered devices   # Usage  Use this operation to retrieve the list of all devices in the &lt;a href&#x3D;\&quot;http://en.wikipedia.org/wiki/REST_API\&quot; target&#x3D;\&quot;_blank\&quot;&gt;house&lt;/a&gt;.  ## Endpoints   My API is provided via the following endpoints.   | Tenant                 | Base URL for REST Endpoints    |  |- -- -- -- -- -- -- -- -- -- -- -- -|- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -|  | Production             | https://api.mydomain.com/v1    |  | API Sandbox            | https://sandbox.mydomain.com/v1|      </remarks>
        /// <param name="skip">number of records to skip</param>
        /// <param name="limit">max number of records to return</param>
        /// <response code="200">All the devices</response>
        [HttpGet]
        [Route("/swaggerhub-support/test_05242017/1.0.0/devices")]
        [SwaggerOperation("GetDevices")]
        [SwaggerResponse(200, type: typeof(List<string>))]
        public virtual IActionResult GetDevices([FromQuery]int? skip, [FromQuery]int? limit)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<string>>(exampleJson)
            : default(List<string>);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        
        /// <param name="device"></param>
        /// <response code="200">successfully registered device</response>
        [HttpPost]
        [Route("/swaggerhub-support/test_05242017/1.0.0/devices")]
        [SwaggerOperation("Register")]
        public virtual void Register([FromBody]DeviceRegistrationInfo device)
        { 
            throw new NotImplementedException();
        }
    }
}
